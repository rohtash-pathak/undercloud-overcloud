  - name: Configuring the Director
    copy: remote_src=true src=/usr/share/instack-undercloud/undercloud.conf.sample dest=/home/stack/undercloud.conf owner=stack group=stack

  - name: Configuring undercloud.conf
    lineinfile: dest=/home/stack/undercloud.conf regexp={{ item.regexp }} line={{ item.line}} state=present
    with_items:
     - { regexp: "#undercloud_hostname" ,line: "undercloud_hostname={{ undercloud_hostname }}" }
     - { regexp: "#local_ip" , line: "local_ip={{ local_ip }}" }
     - { regexp: "#network_gateway", line: "network_gateway={{ network_gateway }}" }
     - { regexp: "#undercloud_public_host", line: "undercloud_public_host={{ undercloud_public_host }}" }
     - { regexp: "#undercloud_admin_host", line: "undercloud_admin_host={{ undercloud_admin_host }}" }
     - { regexp: "#undercloud_service_certificate", line: "undercloud_service_certificate={{ undercloud_service_certificate }}" }
     - { regexp: "#generate_service_certificate", line: "generate_service_certificate= {{ generate_service_certificate }}" }
     - { regexp: "#certificate_generation_ca", line: "certificate_generation_ca={{ certificate_generation_ca }}" }
     - { regexp: "#local_interface", line: "local_interface={{ local_interface }}" }
     - { regexp: "#network_cidr", line: "network_cidr={{ network_cidr }}" }
     - { regexp: "#masquerade_network", line: "masquerade_network={{ masquerade_network }}" }
     - { regexp: "#dhcp_start", line: "dhcp_start={{ dhcp_start }}" }
     - { regexp: "#dhcp_end", line: "dhcp_end={{ dhcp_end }}" }
     - { regexp: "#inspection_interface", line: "inspection_interface={{ inspection_interface }}" }
     - { regexp: "#inspection_iprange", line: "inspection_iprange={{ inspection_iprange }}" }
     - { regexp: "#undercloud_debug ", line: "undercloud_debug={{ undercloud_debug }}" }
     - { regexp: "#enable_tempest ", line: "enable_tempest={{ enable_tempest }}" }
     - { regexp: "#enable_telemetry", line: "enable_telemetry={{ enable_telemetry }}" }
     - { regexp: "#enable_ui ", line: "enable_ui={{ enable_ui }}" }
     - { regexp: "#enable_validations", line: "enable_validations={{ enable_validations }}" }
     - { regexp: "#ipxe_enabled", line: "ipxe_enabled={{ ipxe_enabled }}" }
     - { regexp: "#undercloud_db_password", line: "undercloud_db_password={{ undercloud_db_password }}" }
     - { regexp: "#undercloud_admin_password", line: "undercloud_admin_password={{ undercloud_admin_password }}" }
     - { regexp: "#undercloud_glance_password", line: "undercloud_glance_password={{ undercloud_glance_password }}" }
     - { regexp: "#undercloud_heat_password", line: "undercloud_heat_password={{ undercloud_heat_password }}" }
     - { regexp: "#undercloud_neutron_password", line: "undercloud_neutron_password={{ undercloud_neutron_password }}" }
     - { regexp: "#undercloud_nova_password", line: "undercloud_nova_password={{ undercloud_nova_password }}" }
     - { regexp: "#undercloud_ironic_password", line: "undercloud_ironic_password={{ undercloud_ironic_password }}" }
     - { regexp: "#undercloud_aodh_password", line: "undercloud_aodh_password={{ undercloud_aodh_password }}" }
     - { regexp: "#undercloud_ceilometer_password", line: "undercloud_ceilometer_password={{ undercloud_ceilometer_password }}" }
     - { regexp: "#undercloud_ceilometer_snmpd_password", line: "undercloud_ceilometer_snmpd_password={{ undercloud_ceilometer_snmpd_password }}" }
     - { regexp: "#undercloud_swift_password", line: "undercloud_swift_password={{ undercloud_swift_password }}" }
     - { regexp: "#undercloud_mistral_password", line: "undercloud_mistral_password={{ undercloud_mistral_password }}" }
     - { regexp: "#undercloud_rabbit_password", line: "undercloud_rabbit_password={{ undercloud_rabbit_password }}" }
     - { regexp: "#undercloud_heat_stack_domain_admin_password", line: "undercloud_heat_stack_domain_admin_password={{ undercloud_heat_stack_domain_admin_password }}" }
     - { regexp: "#undercloud_haproxy_stats_password", line: "undercloud_haproxy_stats_password={{ undercloud_haproxy_stats_password }}" }
     - { regexp: "#undercloud_zaqar_password", line: "undercloud_zaqar_password={{ undercloud_zaqar_password }}" }

  - name: generating the certificate
    command: openssl genrsa -out /home/stack/privkey.pem 2048

  - command: openssl req -new -x509 -key privkey.pem -out cacert.pem -subj "/C=IN/ST=HR/L=GUR/O=IT/CN={{ undercloud_public_host }}" -days 365
  - shell: cat cacert.pem privkey.pem > undercloud.pem
  - file: name=/etc/pki/instack-certs state=directory
    become: true
  - command: "{{ item }}" 
    with_items:
    - "cp undercloud.pem /etc/pki/instack-certs"
    - 'semanage fcontext -a -t etc_t "/etc/pki/instack-certs(/.*)?"'
    - "restorecon -R /etc/pki/instack-certs"
    - "sudo cp cacert.pem /etc/pki/ca-trust/source/anchors/"
    - "sudo update-ca-trust extract"
    become: true

  - name: Install UnderCloud Finally 
    command: openstack undercloud install 

  - name: making source permanent for stackrc
    lineinfile: dest=/home/stack/.bash_profile line="source ~/stackrc"

  - name: making source permanent for stackrc
    lineinfile: dest=/home/stack/.bash_profile line="source ~/stackrc"

  - name: Uploading Images
    shell: source /home/stack/stackrc && openstack overcloud image upload --image-path /home/stack/images/

  - name: output for neutron subnet-list
    shell:  source /home/stack/stackrc && neutron subnet-list | awk '{print $2}' | egrep -v 'id|^$'
    register: id

  - name: print output for neutron subnet-list
    debug: msg={{ id.stdout }}
  - name: Register with nameserver
    shell: source /home/stack/stackrc && neutron subnet-update {{ id.stdout }} --dns-nameserver 172.16.56.142

  - name: Neutron Subnet show to check the DNS entry
    shell: source /home/stack/stackrc && neutron subnet-show {{ id.stdout }}
  
  - name: Checking Public vip
    wait_for: host={{ undercloud_public_host }} port=22 timeout=1
    delegate_to: 10.64.108.58
      
  - debug: msg="Public vip is Pinging"
    
